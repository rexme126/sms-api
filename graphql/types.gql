type User {
    id: ID!
    first_name: String
    last_name: String
    middle_name: String
    user_type: String
    phone: String
    gender: String
    religion: String
    photo: String
    email: String
    lga: String
    password: String
    created_at: DateTime
    updated_at: DateTime
    # createdAt: DateTime! @rename(attribute: "created_at")
    roles: [Role]
    permissions: [Permission]
    notifications: [Notification]
    unreadNotifications: [UnreadNotification]
    country: Country @belongsTo
    state: State @belongsTo
    city: City @belongsTo
    blood_group: BloodGroup @belongsTo
    students: [Student] @hasMany
    teachers: [Teacher] @hasMany
    libarians: [Libarian] @hasMany
    guardian: Guardian @hasOne
    accountant: Accountant @hasOne
    workspace: Workspace
}

type Role {
    id: Int!
    name: String!
    permissions: [Permission] @belongsToMany
}

type Permission {
    id: Int!
    name: String!
}

# notification
type Notification {
    id: ID
    type: String
    notifiable_id: Int
    data: Data
    read_at: String
}

type UnreadNotification {
    type: String
    read_at: String
}
type Data {
    data: String
}

type Country {
    id: ID!
    name: String
    state: [State] @hasMany
}
type State {
    id: ID!
    name: String
    cities: [City] @hasMany
}
type City {
    id: ID!
    name: String
}
type BloodGroup {
    id: ID!
    name: String
}

type Event {
    id: ID!
    slug: String
    description: String!
    title: String
    photo: Upload
    date: String!
    published: Boolean
}
type Notice {
    id: ID!
    slug: String
    description: String!
    title: String
    photo: String
    date: String!
    published: Boolean
}
type Student {
    id: ID!
    slug: String
    adm_no: String
    code: String!
    admitted_year: String
    birthday: String
    status: Boolean
    first_name: String
    last_name: String!
    gender: String!
    middle_name: String
    address: String!
    phone: String
    photo: String
    cum_avg: Int
    promotion_term_id: Int
    guardian_name: String
    guardian_no: String
    guardian_email: String
    guardian_address: String
    term: Term @belongsTo
    session: Session @belongsTo
    section: Section @belongsTo
    klase: Klase @belongsTo
    user: User @belongsTo
    guardian: Guardian @belongsTo
}
type Teacher {
    id: ID!
    slug: String
    first_name: String!
    last_name: String!
    gender: String!
    birthday: String
    code: String
    middle_name: String
    photo: String
    phone: String
    qualification: String
    user: User @belongsTo
    klases: [Klase] @belongsToMany
    subjects: [Subject] @belongsToMany
}

type Accountant {
    id: ID!
    slug: String
    first_name: String!
    last_name: String!
    gender: String!
    birthday: String
    code: String
    middle_name: String
    photo: String
    phone: String
    qualification: String
    user: User @belongsTo
}
type Libarian {
    id: ID!
    slug: String
    first_name: String!
    last_name: String!
    gender: String!
    birthday: String
    code: String
    middle_name: String
    photo: String
    phone: String
    qualification: String
    user: User @belongsTo
}

type Driver {
    id: ID!
    slug: String!
    first_name: String
    last_name: String
    religion: String
    route: String
    lga: String
    photo: String
    birthday: String
    driver_license: String
    vehicle_number: String
    phone: String!
    blood_group: BloodGroup @belongsTo
    country: Country @belongsTo
    state: State @belongsTo
    city: City @belongsTo
}
type Guardian {
    id: ID!
    slug: String
    students: [Student] @hasMany
    user: User @belongsTo
}
type Klase {
    id: ID!
    slug: String
    name: String!
    # subjects: [Subject] @hasMany
    students: [Student] @hasMany
    teachers: [Teacher] @belongsToMany
}
type Subject {
    id: ID!
    subject: String!
    teachers: [Teacher] @belongsToMany
}
type Timetable {
    id: ID!
    monday: String
    tuesday: String
    wednesday: String
    thursday: String
    friday: String
    time: String
    klase_id: Int!
}
type ExamTimetable {
    id: ID!
    monday: String
    tuesday: String
    wednesday: String
    thursday: String
    friday: String
    time: String
    date: String
    klase_id: Int!
}

type Mark {
    id: ID!
    ca1: Int
    ca2: Int
    tca: Int
    exam: Int
    status: String
    exam_total: Int
    sub_position: Int
    cum_ave: String
    cum: Int
    student: Student @belongsTo
    subject: Subject @belongsTo
    klase: Klase @belongsTo
    grade: Grade @belongsTo
    section: Section @belongsTo
    session: Session @belongsTo
    term: Term @belongsTo
}

type Grade {
    id: ID!
    name: String
    mark_from: Int
    mark_to: Int
    remark: String
}

type Term {
    id: ID!
    name: String
}

type Session {
    id: ID!
    name: String
}
type Section {
    id: ID!
    name: String!
}

type ExamRecord {
    id: ID!
    total: Int
    avg: String
    cum_total: String
    cum_avg: String
    klase_avg: String
    position: Int
    status: String
    af: String
    ps: String
    p_comment: String
    t_comment: String
    subject: Subject @belongsTo
    student: Student @belongsTo
    klase: Klase @belongsTo
    term: Term @belongsTo
    session: Session @belongsTo
    section: Section @belongsTo
}
type SetPromotion {
    id: ID!
    name: Int
}

type Promotion {
    id: ID!
    from_class: Int!
    to_class: Int!
    from_session: Int!
    to_session: Int!
    from_term: Int
    to_term: Int
    status: Boolean!
    student: Student @belongsTo
}
type Payment {
    id: ID!
    title: String
    amount: Int!
    ref_no: String
    method: String
    description: String
    klase: Klase @belongsTo
    term: Term @belongsTo
    session: Session @belongsTo
}

type PaymentRecord {
    id: ID!
    amount: Int!
    ref_no: String
    amt_paid: Int
    balance: Int
    status: String
    receipt: Int
    title: String
    klase: Klase @belongsTo
    term: Term @belongsTo
    session: Session @belongsTo
    payment: Payment @belongsTo
    student: Student @belongsTo
}

type Workspace {
    id: ID!
    slug: String!
    name: String!
    logo: String
}
