extend type Query {
    # timetables(
    #   "Filters by name. Accepts SQL LIKE wildcards `%` and `_`."
    #   klase_id: Int! @where(operator: "like")
    # ): [Timetable!]! @all

    timetables(klase_id: Int!, slug: String @eq): [Timetable!]!
        @field(resolver: "Timetable\\TimetablesQuery")

    timetable(id: Int!, slug: String @eq): Timetable
        @field(resolver: "Timetable\\TimetableQuery")

    #timetable(id: ID! @where(operator: "like")): Timetable @first
}

extend type Mutation {
    createTimetable(
        monday: String
        tuesday: String
        wednesday: String
        thursday: String
        friday: String
        time: String
        klase_id: Int!
        workspace: String
    ): Timetable @field(resolver: "Timetable\\CreateTimetableMutator")

    updateTimetable(
        id: ID!
        monday: String
        tuesday: String
        wednesday: String
        thursday: String
        friday: String
        time: String
        klase_id: Int!
        workspace: String
    ): Timetable @field(resolver: "Timetable\\UpdateTimetableMutator")

    deleteTimetable(id: Int!, workspace: String): Timetable
        @field(resolver: "Timetable\\DeleteTimetableMutator")
}
