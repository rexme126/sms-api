# extend type Query {
#     books: [Book] @all
#     book(id: ID! @eq): Book @find
#     booksByFeatured(featured: Boolean! @eq): [Book] @all
#     # custome query
#     someComplexQuery(search: String!): [Book]
# }

# extend type Mutation {
#     createBook(
#         title: String @rules(apply: ["required"])
#         author: String @rules(apply: ["required"])
#         image: Upload
#         link: String
#         description: String
#         featured: Boolean
#         category_id: Int!
#     ): Book

#     markAsRead(id: Int!): Book

#     updateBook(
#         id: ID @rules(apply: ["required"])
#         title: String @rules(apply: ["required"])
#         author: String @rules(apply: ["required"])
#         image: Upload
#         link: String
#         description: String
#         featured: Boolean
#         category_id: Int!
#     ): Book

#     deleteBook(id: ID! @rules(apply: ["required"])): Book @delete

#     likeUnlikeBook(likeUnlike: String): Book @field(resolver: "likeUnlikeBook")
# }
