extend type Query {
    users: [User!]! @all
    user(id: ID @eq): User @first
    userWorkspace(id: ID @eq): User @first
    workspaces: [Workspace!]! @all
    notification(notifiable_id: Int! @eq): Notification @first
    roles: [Role!]! @all
    permissions: [Permission!]! @all
    # latestUsers: [Permission!]! @all @orderBy(column: "name", direction: ASC)
    countries: [Country!]! @all
    country(id: ID @eq): Country @first

    states: [State!]! @all
    state(id: ID @eq): State @first

    cities: [City!]! @all
    city(id: ID @eq): City @first

    guardians: [Guardian!]! @all

    guardiansDashboard(workspaceId: Int): [Guardian!]!
        @field(resolver: "Guardian\\GuardianDashboardQuery")

    guardian(id: ID! @eq): Guardian @first

    bloodGroups: [BloodGroup!]! @all
}

extend type Mutation {
    markAsRead(notifiable_id: Int!): Notification
        @field(resolver: "User\\MarkAsReadMutator")

    updateUserPassword(
        id: Int!
        oldPassword: String! @rules(apply: ["required"])
        password: String!
    ): Boolean @field(resolver: "User\\UpdateUserPasswordMutator")

    otpPasswordReset(id: Int, email: String): Boolean
        @field(resolver: "User\\OtpPasswordResetMutator")

    verifyOtp(otp: Int!): Boolean @field(resolver: "User\\VerifyOtpMutator")

    updatePassword(
        email: String!
        password: String! @rules(apply: ["required"])
    ): Boolean @field(resolver: "User\\UpdatePasswordMutator")
}
