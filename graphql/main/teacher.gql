extend type Query {
    teachers(workspaceId: Int): [Teacher!]!
        @field(resolver: "Teacher\\TeachersQuery")

    teacher(id: Int!, workspaceId: Int @eq): Teacher
        @field(resolver: "Teacher\\TeacherQuery")

    teachersDashboard(workspaceId: Int): [Teacher!]!
        @field(resolver: "Teacher\\TeacherDashboardQuery")

    # assign subject to teacher
    assignSubjectToTeachers(
        workspaceId: Int!
        klaseId: Int!
        sectionId: Int!
    ): [AssignSubjectTeacher!]!
        @field(resolver: "Teacher\\AssignSubjectTeacherQuery")

    teacherSubjectAllocation(
        workspaceId: Int!
        teacherId: Int!
    ): [AssignSubjectTeacher!]!
        @field(resolver: "Teacher\\TeacherSubjectAllocationrQuery")
}

extend type Mutation {
    createTeacher(
        workspaceId: Int
        userTable: UsersInput
        teacherTable: WorkersInput
    ): Teacher @field(resolver: "Teacher\\CreateTeacherMutator")

    updateTeacher(
        id: ID!
        workspaceId: Int
        userTable: EditUsersInput
        teacherTable: WorkersInput
    ): Teacher @field(resolver: "Teacher\\UpdateTeacherMutator")

    deleteTeacher(id: Int!, workspaceId: Int): Boolean
        @field(resolver: "Teacher\\DeleteTeacherMutator")

    # assign subject to teacher
    createSubjectToTeacher(
        workspaceId: Int!
        klaseId: Int!
        sectionId: Int!
        subjectId: [String!]
        teacherId: Int!
    ): AssignSubjectTeacher! @field(resolver: "Teacher\\AssignSubjectTeacher")

    updateSubjectToTeacher(
        id: ID!
        subjectId: Int!
        teacherId: Int!
    ): AssignSubjectTeacher!
        @field(resolver: "Teacher\\UpdateAssignSubjectTeacher")

    deleteSubjectToTeacher(id: ID!): Boolean
        @field(resolver: "Teacher\\DeleteSubjectToTeacherMutator")
}
