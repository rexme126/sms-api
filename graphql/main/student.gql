extend type Query {
    students(workspaceId: Int): [Student!]!
        @field(resolver: "Student\\StudentsQuery")
    encodedImages(workspaceId: Int, studentId: Int): EncodedImage!
        @field(resolver: "Student\\StudentPhotoQuery")

    student(id: Int!, workspaceId: Int @eq): Student
        @field(resolver: "Student\\StudentQuery")

    studentsDashboard(workspaceId: Int): [Student!]!
        @field(resolver: "Student\\StudentDashboardQuery")
    studentSubjectAllocation(
        workspaceId: Int!
        klaseId: Int!
    ): [AssignSubjectTeacher!]!
        @field(resolver: "Student\\StudentSubjectAllocationrQuery")
}

extend type Mutation {
    createStudent(
        workspaceId: Int
        studentUser: StudentUserInput
        student: StudentInput
    ): Student @field(resolver: "Student\\CreateStudentMutator")

    updateStudent(
        id: ID!
        workspaceId: Int
        studentUser: EditStudentUserInput
        student: EditStudentInput
    ): Student @field(resolver: "Student\\UpdateStudentMutator")

    deleteStudent(id: Int!, workspaceId: Int): Boolean
        @field(resolver: "Student\\DeleteStudentMutator")
}
