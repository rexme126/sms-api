extend type Query {
    marks(
        klase_id: Int!
        subject_id: Int
        term_id: Int!
        session_id: Int!
        section_id: Int!
        workspaceId: Int
    ): [Mark] @field(resolver: "Mark\\MarkQueries")

    studentMarkResult(
        klase_id: Int!
        student_id: Int!
        term_id: Int!
        session_id: Int!
        section_id: Int
        status: String
        workspaceId: Int
    ): [Mark] @field(resolver: "Mark\\StudentExamResultQuery")

    terms: [Term!]! @all

    # student Result
    mainStudentMarkResult(
        klase_id: Int!
        student_id: Int!
        term_id: Int!
        session_id: Int!
        section_id: Int!
        workspaceId: Int
    ): [Mark] @field(resolver: "Mark\\MainStudentExamResultQuery")
}

extend type Mutation {
    createQueries(
        klase: Int!
        subject: Int!
        term: Int!
        session: Int!
        section: Int!
        workspaceId: Int
    ): Mark @field(resolver: "Mark\\QueryUserMarkMutator")

    updateMarks(
        marks: [MarkInput]
        klase_id: Int!
        subject_id: Int!
        term_id: Int!
        session_id: Int!
        section_id: Int!
        workspaceId: Int
    ): Mark @field(resolver: "Mark\\UpdateMarkMutator")
}
