extend type Query {
    drivers: [Driver!]! @all
    driver(slug: String! @eq): Driver @first
}

extend type Mutation {
    createDriver(
        first_name: String @rules(apply: ["required"])
        last_name: String @rules(apply: ["required"])
        religion: String @rules(apply: ["required"])
        route: String @rules(apply: ["required"])
        gender: String @rules(apply: ["required"])
        photo: Upload
        birthday: String @rules(apply: ["required"])
        driver_license: String  @rules(apply: ["required", "unique:drivers,driver_license"])
        vehicle_number: String @rules(apply: ["required"])
        phone: String @rules(apply: ["required", "unique:drivers,phone"])
        country_id: Int @rules(apply: ["required"])
        state_id: Int @rules(apply: ["required"])
        city_id: Int @rules(apply: ["required"])
        lga: String @rules(apply: ["required"])
        blood_group_id: Int @rules(apply: ["required"])
    ): Driver @field(resolver: "Driver\\CreateDriverMutator")

    updateDriver(
        id: ID!
        first_name: String @rules(apply: ["required"])
        last_name: String @rules(apply: ["required"])
        religion: String @rules(apply: ["required"])
        route: String @rules(apply: ["required"])
        gender: String @rules(apply: ["required"])
        photo: Upload
        birthday: String @rules(apply: ["required"])
        driver_license: String  @rules(apply: ["required"])
        vehicle_number: String @rules(apply: ["required"])
        phone: String @rules(apply: ["required"])
        country_id: Int @rules(apply: ["required"])
        state_id: Int @rules(apply: ["required"])
        city_id: Int @rules(apply: ["required"])
        lga: String @rules(apply: ["required"])
        # blood_group_id: Int @rules(apply: ["required"])
    ): Driver @field(resolver: "Driver\\UpdateDriverMutator")
    
      deleteDriver(
        id: ID!
    ): Driver @field(resolver: "Driver\\DeleteDriverMutator")
}
