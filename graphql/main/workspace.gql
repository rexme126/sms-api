extend type Query {
    adminWorkspace(workspaceId: Int!, status: Int): Workspace
        @field(resolver: "Workspace\\WorkspaceQuery")

    schools: [Workspace!]! @field(resolver: "Workspace\\WorkspacesQuery")

    school(id: ID! @eq): Workspace @first
}

extend type Mutation {
    createSchool(
        name: String!
        slug: String!
        email: String! @rules(apply: ["required", "unique:users,email"])
        first_name: String!
        last_name: String!
        phone: String! @rules(apply: ["required", "unique:users,phone"])
        lga: String
        gender: String!
        country: Int!
        state: Int!
        city: String!
    ): Boolean @field(resolver: "Workspace\\CreateSchoolWorkspace")

    updateSchool(
        id: Int!
        name: String!
        slug: String!
        email: String!
        first_name: String!
        last_name: String!
        phone: String!
        gender: String!
        lga: String
        country: Int!
        state: Int!
        city: String!
    ): Workspace @field(resolver: "Workspace\\UpdateSchoolWorkspace")

    # setting
    updateAdminSettings(
        workspaceId: ID!
        bank: String 
        account_name: String 
        account_no: String
        logo: Upload
            @rules(
                apply: ["nullable", "mimetypes:image/jpeg,image/png,image/jpg"]
            )
        stamp: Upload
            @rules(
                apply: ["nullable", "mimetypes:image/jpeg,image/png,image/jpg"]
            )
        paystack_secret_key: String
    ): Workspace @field(resolver: "Workspace\\UpdateAdminSettingsWorkspace")

    SuspendSchool(workspaceId: ID!, status: Int!): Workspace
        @field(resolver: "Workspace\\SuspendSchoolWorkspace")

    deleteSchool(workspaceId: Int!): Boolean
        @field(resolver: "Workspace\\DeleteSchoolWorkspace")
}
